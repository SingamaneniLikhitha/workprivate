my x12
ISA*00*          *00*          *ZZ*770545613      *ZZ*00060          *251010*0159*^*00501*263934810*0*P*:
GS*HR*770545613*00060*20251010*0159*263934810*X*005010X212
ST*276*0001*005010X212
BHT*0010*13*PAN1234*20251010*01594900
HL*1**20*1
NM1*PR*2*UNITED HEALTHCARE COMMERCIAL*****PI*87726
HL*2*1*21*1
NM1*41*1*DUVAL COUNTY HEALTH DEPARTMENT*****46*272890908
HL*3*2*19*1
NM1*1P*1* HEALTH DEPARTMENT*****XX*1649589466
HL*4*3*22*0
NM1*IL*1*JohnA*LostB****MI*A91962246
DMG*D8*20250530*M
SE*12*0001
GE*1*263934810
IEA*1*263934810


======================
ISA*00*          *01*JQ5V7TJQR *ZZ*TPG00061080    *ZZ*MEDIFAX EDI    *251008*0800*^*00501*605088663*0*P*:~
GS*HR*LCX1210000*133052274*20251008*08000100*100513716*X*005010X212~
ST*276*0001*005010X212~
BHT*0010*13*605088663*20251008*0800~
HL*1**20*1~
NM1*PR*2*UNITED HEALTHCARE COMMERCIAL*****PI*UHC~
HL*2*1*21*1~
NM1*41*2*DUVAL COUNTY HEALTH DEPARTMENT*****46*1528034170~
HL*3*2*19*1~
NM1*1P*2*DUVAL COUNTY HEALTH DEPARTMENT*****XX*1528034170~
HL*4*3*22*0~
DMG*D8*20240529*M~
NM1*IL*1*CLARK*NINA*MUSA MUZZAMMIL***MI*401076927~
TRN*1*16-2060B348-197B-458A-8489-5936D037C99A~
REF*EJ*16-1000144460~
AMT*T3*82.66~
DTP*472*D8*20250912~
SE*16*0001~
GE*1*100513716~
IEA*1*605088663~

// --- SUBSCRIBER LOOP (2000D) ---
var loop2000D = transactionset.Segments.OfType<Loop>().FirstOrDefault(l => l.SegmentId == "2000D");
if (loop2000D != null)
{
    // 1Ô∏è‚É£ Keep only HL temporarily so DMG appears immediately after it
    var children = loop2000D.Segments.Where(s => s.SegmentId != "HL").ToList();
    foreach (var c in children)
        loop2000D.Segments.Remove(c);

    // 2Ô∏è‚É£ DMG segment (DOB/Gender)
    var dobYYYYMMDD = NormalizeToYYYYMMDD(GetCSVValue(record, "DOB"));
    if (!string.IsNullOrEmpty(dobYYYYMMDD))
    {
        var dmg = new DMG();
        dmg.DateOfBirth.FormatQualifier = "D8";
        dmg.DateOfBirth.ParsedValue = dobYYYYMMDD;
        dmg.GenderCode = GetCSVValue(record, "Gender");
        loop2000D.AddSegment(dmg); // ‚úÖ DMG right after HL
    }

    // 3Ô∏è‚É£ REF segments under 2000D
    var ft = GetCSVValue(record, "FacilityType");
    var cs = GetCSVValue(record, "ClaimStatus");
    var group = GetCSVValue(record, "Group");
    var claimNumber = GetCSVValue(record, "ClaimNumber");

    if (!string.IsNullOrEmpty(ft) && !string.IsNullOrEmpty(cs))
        AddRefSegment(loop2000D, "BLT", ft + cs);
    if (!string.IsNullOrEmpty(ft))
        AddRefSegment(loop2000D, "LU", ft);
    if (!string.IsNullOrEmpty(group))
        AddRefSegment(loop2000D, "6P", group);
    if (!string.IsNullOrEmpty(claimNumber))
        AddRefSegment(loop2000D, "1K", claimNumber);

    // 4Ô∏è‚É£ Reattach existing subloops (2100D, 2200D, etc.)
    foreach (var c in children)
        loop2000D.AddSegment(c);

    // 5Ô∏è‚É£ Subscriber name inside 2100D
    var loop2100D = loop2000D.Segments.OfType<Loop>().FirstOrDefault(l => l.SegmentId == "2100D");
    if (loop2100D != null)
    {
        var sNM1 = loop2100D.Segments.OfType<NM1>().FirstOrDefault();
        if (sNM1 != null)
        {
            sNM1.EntityId = "IL";
            sNM1.EntityType = "1";
            sNM1.Last = GetCSVValue(record, "LN");
            sNM1.First = GetCSVValue(record, "FN");
            sNM1.Middle = GetCSVValue(record, "MI");
            sNM1.IdQualifier = "MI";
            sNM1.IdCode = GetCSVValue(record, "MemberID");
        }
    }

    // 6Ô∏è‚É£ Ensure 2200D loop exists ‚Äî correct way!
    var loop2200D = loop2000D.Segments.OfType<Loop>().FirstOrDefault(l => l.SegmentId == "2200D");
    if (loop2200D == null)
        loop2200D = loop2000D.AddLoop("2200D"); // ‚úÖ proper Domain.X12 pattern

    // 7Ô∏è‚É£ TRN (Claim Status Tracking Number)
    var trace = GetCSVValue(record, "TraceNumber");
    if (string.IsNullOrWhiteSpace(trace))
        trace = "TRACE" + DateTime.Now.ToString("HHmmssfff"); // fallback

    var trn = new TRN { TraceTypeCode = "1", TraceNumber = trace };
    loop2200D.AddSegment(trn);

    // 8Ô∏è‚É£ REF*EJ (Payer Claim Control Number)
    var pan = GetCSVValue(record, "PAN");
    if (!string.IsNullOrEmpty(pan))
        AddRefSegment(loop2200D, "EJ", pan);

    // 9Ô∏è‚É£ AMT*T3 (Total Submitted Charges)
    var amtVal = GetCSVValue(record, "TotalSubmittedCharges");
    if (!string.IsNullOrEmpty(amtVal))
    {
        var amt = new AMT { AmountQualifierCode = "T3" };
        amt.MonetaryAmount.ParsedValue = amtVal;
        loop2200D.AddSegment(amt);
    }

    // üîü DTP*472 (Claim Service Dates)
    var from = NormalizeToYYYYMMDD(GetCSVValue(record, "ClaimDateFrom"));
    var to = NormalizeToYYYYMMDD(GetCSVValue(record, "ClaimDateTo"));
    if (!string.IsNullOrEmpty(from))
    {
        var dtp = new DTP { Qualifier = "472" };
        dtp.Date.FormatQualifier = string.IsNullOrEmpty(to) ? "D8" : "RD8";
        dtp.Date.ParsedValue = string.IsNullOrEmpty(to) ? from : $"{from}-{to}";
        loop2200D.AddSegment(dtp);
    }
}
